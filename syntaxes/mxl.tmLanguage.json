{
	"name": "EssMaxL",
	"filetypes": ["mxl", "msh"],
	"scopeName": "source.mxl",
	"patterns": [{
		"include": "#comments"
	},
	{
		"include": "#punctuation"
	},
	{
		"include": "#keywords"
	},
	{
		"include": "#constants-and-special-vars"
	},
	{
		"include": "#strings"
	}

		
	],
	"repository": {
        "comments": {
            "patterns": [{
                    "name": "comment.block.empty.csc",
                    "match": "/\\*\\*/",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment.csc"
                        }
                    }
                },
                {
                    "include": "#comments-inline"
                }
            ]
        },
        "comments-inline": {
            "patterns": [{
                    "include": "#comments-block"
                },
                {
                    "match": "((//).*)$",
                    "captures": {
                        "1": {
                            "name": "comment.line.double-slash.csc"
                        }
                    }
                }
            ]
        },
        "comments-block": {
            "patterns": [{
                "name": "comment.block.csc",
                "begin": "/\\*",
                "end": "\\*/",
                "patterns": [{
                    "include": "#comments-block"
                }]
            }]
        },
        "constants-and-special-vars": {
            "patterns": [{
                    "name": "constant.language.csc",
					"match": "(?i)\\b(DIRECT|FORCE|AGGREGATE_MISSING|MINUTES|SECONDS|AGGREGATE_STORAGE|ANY|BITMAP|BUFFERED|CACHE_PINNING|WRITE|ZLIB|UNICODE_MODE|UNLIMITED|SINGLE|RUNTIME|RLE|READ|NONUNICODE_MODE|MULTIPLICATION|NEVER|NO_ACCESS|NONE|OPTIONAL|OPTIONAL_GROUP|META_READ|IMMEDIATE|COMMITTED_MODE|DEFINITION_ONLY|DAYS|DIVISION|FIXED_DECIMAL|SCIENTIFIC_NOTATION|SHELL)\\b"
                },
                {
                    "name": "constant.numeric.csc",
                    "match": "(?<=[^$])((0(x|X)[0-9a-fA-F]+)|([0-9]+(\\.[0-9]+)?))"
                },
                {
                    "include": "#function-identifier"
                }

            ]
        },
        "function-identifier": {
            "patterns": [{
                    "name": "entity.name.function.csc",
					"match": "(?i)\\b(ALTER|APPLICATION|DATABASE|GROUP|EXIT|OBJECT|PARTITION|SESSION|SYSTEM|TABLESPACE|TRIGGER|USER|CREATE|ALGORITHM|CALCULATION|FUNCTION|LOCATION|ALIAS|MACRO|OUTLINE|LEVEL|LONG|MEDIUM|SHORT|OBJECTS|DISPLAY|DISK|VOLUME|ROW|LOCK|PRIVILEGE|SPOOL|VARIABLE|DROP|EXECUTE|EXPORT|DATA|LRO|GRANT|IMPORT|DIMENSIONS|QUERY|LOGIN|REFRESH|CUSTOM|DEFINITIONS|REPLICATED|ABORT|ACTIVE|ADD|ADVANCED|AFTER|ALIAS_NAMES|ALIAS_TABLE|ALL|ALLOW|APPEND|APPLICATION|ARCHIVE|AREA|AS|AT|ATTRIBUTE|ATTRIBUTE_INFO|ATTRIBUTE_SPEC|ATTRIBUTE_TO_BASE_MEMBER_ASSOCIATION|AUTOSTARTUP|BEFORE|BEGIN|BLOCKS|CALC_SCRIPT|CALC_STRING|CASCADE|CLEAR|COLUMNS|COMMANDS|COMMENT|COMMITBLOCK|COMPRESSION|CONNECT|CONNECTS|COPY|CREATE_APPLICATION|CREATE_BLOCKS|CREATE_USER|CUBE_SIZE_INFO|CURRENCY|CURRENCY_CONVERSION|CURRENCY_DATABASE|CURRENCY_MEMBER|CURRENCY_RATE|DATA_BLOCK|DATA_CACHE_SIZE|DATA_FILE|DATA_FILE_CACHE_SIZE|DATABASE_SYNCH|DATABASE_ASYNCH|DBSTATS|DEFAULT|DELETE|DESIGNER|DIMENSION|DIRECTION|DIRECTORY|DISABLE|DISABLED|DISALLOW|DYNAMIC_CALC|ENABLE|ENABLED|END|END_TRANSACTION|ENFORCE|EQD|ERROR|ERROR_FILE|ESTIMATED|EVENT|EXCEL|EXCEEDS|EXPORT_DIRECTORY|EXTERNAL|FROM|FILE|FILE_SIZE|FILE_TYPE|FILTER_ACCESS|GB|GET|HA_TRACE|HELD|HIGH|HOSTNAME|IDENTIFIED|IMPLICIT_COMMIT|IN|INACTIVE_USER_DAYS|INDEX|INDEX_CACHE_SIZE|INDEX_DATA|INDEX_PAGE_SIZE|INFORMATION|INPUT|INSTEAD|INVALID_BLOCK_HEADERS|INVALID_LOGIN_LIMIT|IO_ACCESS_MODE|KB|KERNEL_IO|KERNEL_CACHE|KILL|LEVEL0|LICENSE_INFO|LINKED|LIST|LOAD|LOCAL|LOCK_TIMEOUT|LOGFILE|LOGOUT|LOTUS_2|LOTUS_3|LOTUS_4|LOW|MAPPED|MAX_LRO_FILE_SIZE|FOR|MB|MEMBER|MEMBER_INSTANCE_DATA|MEMBER_ALIAS_NAMESPACE|MEMBER_UDA|MEMBER_UDA_NAMESPACE|MEMBER_CALCULATION|MEMBER_COMMENT|MEMBER_FIXED_LENGTH_DATA|MEMBER_FORMULA|MEMBER_INFO|MEMBER_NAME_NAMESPACE|MEMBER_UDA|MEMBER_UDA_NAMESPACE|MEMBER_VARIABLE_LENGTH_DATA|MINIMUM|MINING|MODE|MODEL|NOTE|OF|OFF|ON|OPG_CACHE|OPG_STATE|OR|OUTLINE_PAGING_FILE|OVERVIEW|PARTITION_FILE|PARTITION_SIZE|PASSWORD|PASSWORD_RESET_DAYS|PERFORMANCE|PERMISSION|PERSISTENCE|PMML_FILE|PORTS|WHERE|THEN|MAIL|ELSE|PRESERVE|INPUT|LEVEL0|LOG_VALUE|PRE_IMAGE_ACCESS|PRESERVE|PROCESS|PROPERTY|PROTOCOL|RECOVER|REMOVE|RENAME|REPAIR|REPLACE|REPORT_FILE|REQUEST|REQUEST_HISTORY|RESET|RESTRUCTURE|RESULT|RETRIEVE_BUFFER_SIZE|RETRIEVE_SORT_BUFFER_SIZE|REVERSE|ROWS|SECURITY_FILE|RULES_FILE|SCOPE|SECURITY|SECURITY_BACKUP|SELECT|SELECTION|NONEMPTYBLOCK|SEMAPHORE|SERVER|SESSION_IDLE_LIMIT|SESSION_IDLE_POLL|SET|SHUTDOWN|SIZE|SPEC|SPINLOCK|STARTUP|STATISTICS|STATUS|STOP|STOPPING|SUPERVISOR|SUPPRESS|SYNC|TABLE|TASK|TB|TEMPLATE|TEXT|THREAD|TO|TOTAL_SIZE|TRANSPARENT|TRIGGER_SPOOL|TWO_PASS_CALC|TYPE|UNICODE|UNLOAD|UNLOCK|UPDATE|UPDATED|UPDATES|USE|USING|VALIDATE|VERIFICATION|VERSION|WHEN|WITH|WIZARD|WORKSHEET)\\b"

                },
                {
                    "name": "entity.name.function.csc",
                	"match": "(?i)\\b(FILTER|PARENT|MEMBERS|IS|AGGREGATE|UDA|COLUMN_WIDTH|MESSAGE|FATAL|COLUMN_SEPARATOR|COLUMN_HEADER|ECHO_MODE|DML_OUTPUT|CELL_STATUS|NUMERICAL_DISPLAY|PRECISION)\\b"
                }

            ]
        },
        "keywords": {


            "patterns": [
                {
                    "name": "keyword.subvar.csc",
                    "match": "(\\&[a-zA-Z0-9_]+)"
                },
                {
                    "name": "keyword.operator.comparison.csc",
                    "match": "(==|!=|<=|<|>=|>)"
                },
                {
                    "name": "keyword.operator.assignment.arithmetic.csc",
                    "match": "(([+*/%-]|\\~)=)"
                },
                {
                    "name": "keyword.operator.assignment.csc",
                    "match": "(=)"
                },
                {
                    "name": "keyword.operator.arithmetic.csc",
                    "match": "(\\-|\\+|\\*|\\/|\\~\\/|%)"
                }
            ]
        },

        "string-interp": {
            "patterns": [{
                    "match": "(\\$[a-zA-Z0-9_]+)",
                    "captures": {
                        "1": {
                            "name": "variable.parameter.csc"
                        }
                    }
                },
                {
                    "name": "string.interpolated.expression.csc",
                    "begin": "\\(",
                    "end": "\\)",
                    "patterns": [{
                            "include": "#keyword.control.csc"
                        },

                        {
                            "include": "#function-identifier"
                        },
                        {
                            "include": "#strings"
                        },
                        {
                            "include": "#constants-and-special-vars",
                            "name": "variable.parameter.csc"
                        },
                        {
                            "name": "variable.parameter.csc",
                            "match": "(\\$[a-zA-Z0-9_]+)"
                        }
                    ]
                },
                {
                    "name": "constant.character.escape.csc",
                    "match": "\\\\."
                }
            ]
        },
        "strings": {
            "patterns": [{
                    "name": "string.interpolated.triple.double.csc",
                    "begin": "(?<!r)\"\"\"",
                    "end": "\"\"\"(?!\")",
                    "patterns": [{
                        "include": "#string-interp"
                    }]
                },
                {
                    "name": "string.interpolated.triple.single.csc",
                    "begin": "(?<!r)'''",
                    "end": "'''(?!')",
                    "patterns": [{
                        "include": "#string-interp"
                    }]
                },
                {
                    "name": "string.quoted.triple.double.csc",
                    "begin": "r\"\"\"",
                    "end": "\"\"\"(?!\")"
                },
                {
                    "name": "string.quoted.triple.single.csc",
                    "begin": "r'''",
                    "end": "'''(?!')"
                },
                {
                    "name": "string.interpolated.double.csc",
                    "begin": "(?<!\\|r)\"",
                    "end": "\"",
                    "patterns": [{
                            "name": "invalid.string.newline",
                            "match": "\\n"
                        },
                        {
                            "include": "#string-interp"
                        }
                    ]
                },
                {
                    "name": "string.quoted.double.csc",
                    "begin": "r\"",
                    "end": "\"",
                    "patterns": [{
                        "name": "invalid.string.newline",
                        "match": "\\n"
                    }]
                },
                {
                    "name": "string.interpolated.single.csc",
                    "begin": "(?<!\\|r)'",
                    "end": "'",
                    "patterns": [{
                            "name": "invalid.string.newline",
                            "match": "\\n"
                        },
                        {
                            "include": "#string-interp"
                        }
                    ]
                },
                {
                    "name": "string.quoted.single.csc",
                    "begin": "r'",
                    "end": "'",
                    "patterns": [{
                        "name": "invalid.string.newline",
                        "match": "\\n"
                    }]
                }
            ]
        },
        "punctuation": {
            "patterns": [{
                    "name": "punctuation.comma.csc",
                    "match": ","
                },
                {
                    "name": "punctuation.terminator.csc",
                    "match": ";"
                },
                {
                    "name": "punctuation.dot.csc",
                    "match": "\\."
                }

            ]
        }
    }
	
}